"""
Terminal output formatting for blocking results.
"""

from __future__ import annotations

from ..core.blocking_engine import BlockingResult


class BlockingTerminalFormatter:
    """Formats blocking results for terminal output."""
    
    @staticmethod
    def format_start_message(input_path: str) -> None:
        """Format the starting message."""
        print("üîó Starting candidate pair generation...")
        print(f"üìÇ Input file: {input_path}")
    
    @staticmethod
    def format_results(result: BlockingResult, input_path: str, output_path: str) -> None:
        """
        Format and print comprehensive blocking results.
        
        Parameters
        ----------
        result : BlockingResult
            The blocking result to format
        input_path : str
            Path to input file
        output_path : str
            Path to output file
        """
        stats = result.stats
        
        print(f"\nüîó Candidate Pair Generation Complete!")
        print(f"‚îÄ" * 50)
        print(f"üìä Data Overview:")
        print(f"  ‚Ä¢ Input records:         {stats.input_records:,}")
        print(f"  ‚Ä¢ Generated pairs:       {stats.output_pairs:,}")
        print(f"  ‚Ä¢ Total possible pairs:  {stats.total_possible_pairs:,}")
        print(f"  ‚Ä¢ Reduction ratio:       {stats.reduction_ratio:.1%}")
        
        print(f"\nüîß Blocking Strategy:")
        print(f"  ‚Ä¢ Available fields:      {', '.join(stats.available_columns)}")
        print(f"  ‚Ä¢ Methods used:          {', '.join(stats.used_methods) if stats.used_methods else 'fuzzy company only'}")
        
        # Warnings and recommendations
        if stats.output_pairs == 0:
            print(f"\n‚ö†Ô∏è  Warning: No candidate pairs generated!")
            print(f"   ‚Ä¢ This might indicate no records share blocking keys")
            print(f"   ‚Ä¢ Consider more lenient blocking or data quality review")
        elif stats.output_pairs > 100000:
            print(f"\n‚ö†Ô∏è  Warning: Large number of pairs generated ({stats.output_pairs:,})")
            print(f"   ‚Ä¢ This might slow down similarity computation")
            print(f"   ‚Ä¢ Consider more aggressive blocking")
        else:
            print(f"\n‚úÖ Good pair count for similarity analysis")
        
        print(f"\nüíæ Files Created:")
        print(f"  ‚Ä¢ Candidate pairs:       {output_path}")
        
        print(f"\n‚úÖ Next step: Compute similarity features")
        print(f"   Command: python -m src.cli.similarity data/outputs/cleaned.csv data/outputs/pairs.csv")
    
    @staticmethod
    def format_error(error: Exception) -> None:
        """Format error messages."""
        print(f"\n‚ùå Blocking failed:")
        print(f"  ‚Ä¢ Error: {str(error)}")
        print(f"  ‚Ä¢ Check your cleaned data file and column names")
